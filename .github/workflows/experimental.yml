# Copyright (C) 2024 Frachtwerk GmbH, Leopoldstra√üe 7C, 76133 Karlsruhe.
#
# This file is part of essencium-backend.
#
# essencium-backend is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# essencium-backend is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with essencium-backend. If not, see <http://www.gnu.org/licenses/>.

name: Essencium CI - Experimental

on:
  push:
    branches:
      - 'experimental'

concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true

jobs:
  compile-main:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: # running setup-java again overwrites the settings.xml
          distribution: 'corretto'
          java-version: '17'
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_PASSWORD # env variable for token in deploy
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
          cache: 'maven'
      - run: mvn -f pom.xml compile
        working-directory: essencium-backend
      - uses: actions/upload-artifact@v4
        if: success()
        with:
          name: essencium-backend
          retention-days: 1
          path: "./essencium-backend/target/*"

  build-development-demo:
    needs:
      - compile-main
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: # running setup-java again overwrites the settings.xml
          distribution: 'corretto'
          java-version: '17'
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_PASSWORD # env variable for token in deploy
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
          cache: 'maven'
      - uses: actions/download-artifact@v4
        with:
          name: essencium-backend
          path: essencium-backend/target/
      - run: mvn install -Dmaven.test.skip=true -Dgpg.skip=true
        working-directory: essencium-backend
      - run: mvn install -Dgpg.skip=true
        working-directory: essencium-backend-sequence-model
      - run: mvn package
        working-directory: essencium-backend-development
      - run: cd essencium-backend-development/target && java -Djarmode=layertools -jar *.jar extract
      - uses: actions/upload-artifact@v4
        if: success()
        with:
          name: essencium-backend-development
          retention-days: 1
          path: essencium-backend-development/target/*

  docker-build-and-publish-development-demo:
    needs: build-development-demo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set POM version env variable
        run: echo "POM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        working-directory: essencium-backend-development
      - uses: actions/download-artifact@v4
        with:
          name: essencium-backend-development
          path: essencium-backend-development/target/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./essencium-backend-development/
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/frachtwerk/essencium-backend-development:experimental
#            frachtwerk/essencium-backend-demo:experimental
