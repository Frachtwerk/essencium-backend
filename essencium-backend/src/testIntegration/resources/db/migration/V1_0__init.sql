create table api_token
(
    id          uuid         not null primary key,
    created_at  timestamp(6),
    created_by  varchar(255),
    updated_at  timestamp(6),
    updated_by  varchar(255),
    description varchar(255),
    linked_user varchar(255) not null,
    valid_until date,
    constraint api_token_linked_user_description_uindex unique (linked_user, description)
);

create table "right"
(
    authority   varchar(255) not null primary key,
    description varchar(512)
);


create table api_token_rights
(
    api_token_id     uuid         not null
        constraint api_token_rights_api_token_id_fk references api_token,
    rights_authority varchar(255) not null
        constraint api_token_rights_right_authority_fk references "right",
    primary key (api_token_id, rights_authority)
);

create table role
(
    name            varchar(255) not null primary key,
    description     varchar(255),
    is_default_role boolean      not null,
    is_protected    boolean      not null,
    is_system_role  boolean      not null
);

create table role_rights
(
    role_name        varchar(255) not null
        constraint role_rights_role_name_fk references role,
    rights_authority varchar(255) not null
        constraint role_rights_right_authority_fk references "right",
    primary key (role_name, rights_authority)
);

create table session_token
(
    id              uuid         not null primary key,
    expiration      timestamp(6),
    issued_at       timestamp(6),
    key             bytea        not null,
    type            varchar(255)
        constraint session_token_type_check check ((type)::text = ANY
                                                   ((ARRAY ['ACCESS'::character varying, 'REFRESH'::character varying, 'API'::character varying])::text[])),
    user_agent      varchar(255),
    username        varchar(255) not null,
    parent_token_id uuid
        constraint session_token_session_token_parent_id_fk references session_token
);

create table translation
(
    locale varchar(255) not null,
    key    varchar(255) not null,
    value  varchar(32600),
    primary key (key, locale)
);

create table "test_user"
(
    id                    bigint generated by default as identity primary key,
    created_at            timestamp(6),
    created_by            varchar(255),
    updated_at            timestamp(6),
    updated_by            varchar(255),
    email                 varchar(150)      not null
        constraint test_user_email_uindex unique,
    enabled               boolean           not null,
    failed_login_attempts integer default 0 not null,
    first_name            varchar(255)      not null,
    last_name             varchar(255)      not null,
    locale                varchar(255)      not null,
    login_disabled        boolean           not null,
    password              varchar(255),
    password_reset_token  varchar(255),
    source                varchar(255)
);

create table test_user_roles
(
    test_user_id    bigint       not null
        constraint test_user_roles_test_user_id_fk references "test_user",
    roles_name varchar(255) not null
        constraint test_user_roles_role_name_fk references role,
    primary key (test_user_id, roles_name)
);

