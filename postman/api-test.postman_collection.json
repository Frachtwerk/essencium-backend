{
	"info": {
		"_postman_id": "10c9a1e6-4ae3-463c-acc8-bd56f2334db4",
		"name": "API-Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17141293"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "List translations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/translations",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"translations"
							]
						}
					},
					"response": []
				},
				{
					"name": "List locales",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/translations/locales",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"translations",
								"locales"
							]
						}
					},
					"response": []
				},
				{
					"name": "List german translations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/translations/de",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"translations",
								"de"
							]
						}
					},
					"response": []
				},
				{
					"name": "Api-docs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.servers[0].url).to.include(\":8098\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v3/api-docs",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v3",
								"api-docs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/actuator/info",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"actuator",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send mail (anonymous)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Elon Musk\",\n    \"mailAddress\": \"musk@tesla.com\",\n    \"subject\": \"Great business opportunity\",\n    \"message\": \"Very boring.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/v1/contact",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"contact"
							]
						}
					},
					"response": []
				},
				{
					"name": "List roles (Unauthorized)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/roles",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "List rights (Unauthorized)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/rights",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"rights"
							]
						}
					},
					"response": []
				},
				{
					"name": "List ExampleEntity (Unauthorized)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/example",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"example"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Get token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.globals.set(\"TOKEN\", pm.response.json().token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"devnull@frachtwerk.de\",\n    \"password\": \"adminAdminAdmin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/auth/token",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"auth",
								"token"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "authenticated",
			"item": [
				{
					"name": "Get me",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/users/me",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get my role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/users/me/role",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"users",
								"me",
								"role"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get my rights",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/users/me/role/rights",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"users",
								"me",
								"role",
								"rights"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update me",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Test\",\n    \"lastName\": \"User 2\",\n    \"locale\": \"en_US\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/v1/users/me",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "List rights",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/rights",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"rights"
							]
						}
					},
					"response": []
				},
				{
					"name": "List roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/roles",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"role_id\", jsonData.name);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"NEW_ROLE\",\n    \"description\": \"A totally new role\",\n    \"rights\": [],\n    \"protected\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/v1/roles",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"user_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@frachtwerk.de\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"role\": \"{{role_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/v1/users",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "FindUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/users?id={{user_id}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"users"
							],
							"query": [
								{
									"key": "id",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete role (deny)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/roles/{{role_id}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"roles",
								"{{role_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List ExampleEntity (empty)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = pm.response.json();",
									"pm.test(\"Content is correct\", function () {",
									"    pm.expect(jsonData.totalElements).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/example",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"example"
							]
						}
					},
					"response": []
				},
				{
					"name": "create ExampleEntity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"example_id\", jsonData.id);",
									"",
									"pm.test(\"Content is correct\", function () {",
									"    pm.expect(jsonData.content).to.eql(\"Very expressive content\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Very expressive content\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/v1/example",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"example"
							]
						}
					},
					"response": []
				},
				{
					"name": "update ExampleEntity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = pm.response.json();",
									"pm.test(\"Content is correct\", function () {",
									"    pm.expect(jsonData.content).to.eql(\"Very expressive content (updated)\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{example_id}}\",\n    \"content\": \"Very expressive content (updated)\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/v1/example/{{example_id}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"example",
								"{{example_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch ExampleEntity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = pm.response.json();",
									"pm.test(\"Content is correct\", function () {",
									"    pm.expect(jsonData.content).to.eql(\"Very expressive content (patched)\");",
									"});",
									"pm.test(\"id is correct\", function () {",
									"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"example_id\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Very expressive content (patched)\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/v1/example/{{example_id}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"example",
								"{{example_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List ExampleEntity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = pm.response.json();",
									"pm.test(\"Content is correct\", function () {",
									"    pm.expect(jsonData.totalElements).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/example",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"example"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete ExampleEntity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/example/{{example_id}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"example",
								"{{example_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List ExampleEntity (empty) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/v1/example",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"example"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send mail (authenticated)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"subject\": \"Great business opportunity\",\n    \"message\": \"Very boring.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/v1/contact",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"contact"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{TOKEN}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "role_id",
			"value": ""
		},
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "example_id",
			"value": ""
		}
	]
}